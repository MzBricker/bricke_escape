{"version":3,"sources":["../../../../assets/js/assets/js/Game.js"],"names":["cc","Class","extends","Component","properties","starPrefab","default","type","Prefab","maxStarDuration","minStarDuration","ground","Node","player","pindex","onLoad","groundY","y","height","spawnNewStar","setInputControl","newStar","instantiate","getComponent","game","node","addChild","setPosition","getNewStarPosition","self","randX","randY","random0To1","jumpHeight","maxX","width","randomMinus1To1","p","systemEvent","on","SystemEvent","EventType","KEY_DOWN","event","console","log","keyCode","KEY","a","d","start"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACP;AACAC,oBAAY;AACTC,qBAAS,IADA;AAETC,kBAAMP,GAAGQ;AAFA,SAFL;AAMR;AACAC,yBAAiB,CAPT;AAQRC,yBAAiB,CART;AASR;AACAC,gBAAQ;AACJL,qBAAS,IADL;AAEJC,kBAAMP,GAAGY;AAFL,SAVA;AAcR;AACAC,gBAAQ;AACJP,qBAAS,IADL;AAEJC,kBAAMP,GAAGY;AAFL,SAfA;AAmBRE,gBAAO;AAnBC,KAHP;AAwBLC,YAAQ,kBAAY;AAChB;AACA,aAAKC,OAAL,GAAe,KAAKL,MAAL,CAAYM,CAAZ,GAAgB,KAAKN,MAAL,CAAYO,MAAZ,GAAmB,CAAlD;AACA;AACA,aAAKC,YAAL;AACA,aAAKC,eAAL;AACH,KA9BI;;AAgCLD,kBAAc,wBAAW;;AAErB;AACA,YAAIE,UAAUrB,GAAGsB,WAAH,CAAe,KAAKjB,UAApB,CAAd;AACE;AACAgB,gBAAQE,YAAR,CAAqB,MAArB,EAA6BC,IAA7B,GAAoC,IAApC;AACF;AACA,aAAKC,IAAL,CAAUC,QAAV,CAAmBL,OAAnB;AACA;AACAA,gBAAQM,WAAR,CAAoB,KAAKC,kBAAL,EAApB;AACH,KA1CI;;AA4CLA,wBAAoB,8BAAY;AAC5B,YAAIC,OAAO,IAAX;AACA,YAAIC,QAAQ,CAAZ;AACA;AACA,YAAIC,QAAQ,KAAKf,OAAL,GAAehB,GAAGgC,UAAH,KAAkB,KAAKnB,MAAL,CAAYU,YAAZ,CAAyB,QAAzB,EAAmCU,UAApE,GAAiF,EAA7F;AACA;AACA,YAAIC,OAAO,KAAKT,IAAL,CAAUU,KAAV,GAAgB,CAA3B;AACAL,gBAAQ9B,GAAGoC,eAAH,KAAuBF,IAA/B;AACA;AACA,eAAOlC,GAAGqC,CAAH,CAAK,MAAMR,KAAKf,MAAhB,EAAwB,CAAC,GAAzB,CAAP;AACH,KAtDI;AAuDLM,qBAAiB,2BAAY;AACzB,YAAIS,OAAO,IAAX;AACA;AACA;AACA7B,WAAGsC,WAAH,CAAeC,EAAf,CAAkBvC,GAAGwC,WAAH,CAAeC,SAAf,CAAyBC,QAA3C,EAAqD,UAAUC,KAAV,EAAgB;AACjEC,oBAAQC,GAAR,CAAYhB,KAAKf,MAAjB;AACA,oBAAO6B,MAAMG,OAAb;AACI,qBAAK9C,GAAG+C,GAAH,CAAOC,CAAZ;AACI,wBAAGnB,KAAKf,MAAL,IAAe,CAAC,CAAnB,EAAqB;AACjB;AACH;AACDe,yBAAKf,MAAL,IAAe,CAAf;AACA;AACJ,qBAAKd,GAAG+C,GAAH,CAAOE,CAAZ;AACI,wBAAGpB,KAAKf,MAAL,IAAe,CAAlB,EAAoB;AAChB;AACH;AACDe,yBAAKf,MAAL,IAAe,CAAf;AACA;AAZR;AAcH,SAhBD;AAiBH,KA5EI;;AA8EL;;AAEA;;AAEAoC,SAlFK,mBAkFI,CAER;AApFI;;AAsFL;AAtFJ","file":"Game.js","sourceRoot":"../../../../assets/js","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n         // 这个属性引用了星星预制资源\n         starPrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n        // 星星产生后消失时间的随机范围\n        maxStarDuration: 0,\n        minStarDuration: 0,\n        // 地面节点，用于确定星星生成的高度\n        ground: {\n            default: null,\n            type: cc.Node\n        },\n        // player 节点，用于获取主角弹跳的高度，和控制主角行动开关\n        player: {\n            default: null,\n            type: cc.Node\n        },\n        pindex:0\n    },\n    onLoad: function () {\n        // 获取地平面的 y 轴坐标\n        this.groundY = this.ground.y + this.ground.height/2;\n        // 生成一个新的星星\n        this.spawnNewStar();\n        this.setInputControl();\n    },\n\n    spawnNewStar: function() {\n        \n        // 使用给定的模板在场景中生成一个新节点\n        var newStar = cc.instantiate(this.starPrefab);\n          // 将 Game 组件的实例传入星星组件\n          newStar.getComponent('Star').game = this;\n        // 将新增的节点添加到 Canvas 节点下面\n        this.node.addChild(newStar);\n        // 为星星设置一个随机位置\n        newStar.setPosition(this.getNewStarPosition());\n    },\n\n    getNewStarPosition: function () {\n        var self = this;\n        var randX = 0;\n        // 根据地平面位置和主角跳跃高度，随机得到一个星星的 y 坐标\n        var randY = this.groundY + cc.random0To1() * this.player.getComponent('Player').jumpHeight + 50;\n        // 根据屏幕宽度，随机得到一个星星 x 坐标\n        var maxX = this.node.width/2;\n        randX = cc.randomMinus1To1() * maxX;\n        // 返回星星坐标\n        return cc.p(240 * self.pindex, -240);\n    },\n    setInputControl: function () {\n        var self = this;\n        // 添加键盘事件监听\n        // 有按键按下时，判断是否是我们指定的方向控制键，并设置向对应方向加速\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, function (event){\n            console.log(self.pindex);\n            switch(event.keyCode) {\n                case cc.KEY.a:\n                    if(self.pindex <= -1){\n                        break;\n                    }\n                    self.pindex -= 1;\n                    break;\n                case cc.KEY.d:\n                    if(self.pindex >= 1){\n                        break;\n                    }\n                    self.pindex += 1;\n                    break;\n            }\n        });\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    start () {\n\n    },\n\n    // update (dt) {},\n});\n"]}